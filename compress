#!/usr/bin/env ruby

require "find"

FILES_ROOT = "public/"
HTML_MINIFIER = "static/node_modules/.bin/html-minifier"
UGLIFY_JS = "static/node_modules/.bin/uglifyjs"
PURIFY_CSS = "static/node_modules/.bin/purifycss"

Setting = Struct.new(:target, :ignoreDirs, :proc)

def getFilePaths(root, target, ignoreDirs)
  paths = []

  Find.find(root) do |f|
    Find.prune if f =~ Regexp.new(ignoreDirs.join("|"))
    if f =~ Regexp.new(target)
      paths << f
    end
  end

  paths
end


def compress(filePaths)
  for fp in filePaths
    f = File.new(fp)
    size = f.size / 1024.0

    yield f

    compressedSize = f.size / 1024.0
    printf("%8.1fkB‚Üí%8.1fkB %s\n", size, compressedSize, f.path)
  end
end


# purifyCss() is voodoo magic. Please be careful if you use this.
def purifyCss(cssFiles)
  cssFiles.each do |css, htmls|
    c = File.new(css)
    size = c.size / 1024.0

    cmd = sprintf("%s %s %s --min --out %s", PURIFY_CSS, css, htmls.join(" "), css)
    system(cmd)

    compressedSize = c.size / 1024.0
    printf("%8.1fkB‚Üí%8.1fkB %s\n", size, compressedSize, c.path)
  end
end


def getSettings
  settings = []

  # Compression Settings for HTML files
  settings << Setting.new(
    "\\.html$",

    ["bower_components", "node_modules", "test",],

    Proc.new{ |file|
      cmd = sprintf("%s -c html-minifier.conf -o %s %s", HTML_MINIFIER, file.path, file.path)
      system(cmd)
    }
  )

  # Compression Settings for JavaScript files
  settings << Setting.new(
    "\\.js$",

    # Don't include bower_components, because Modernizr doesn't have "modernizr.min.js".
    ["node_modules", "modernizr/feature-detects", "test",],

    Proc.new{ |file|
      cmd = sprintf("%s -o %s %s", UGLIFY_JS, file.path, file.path)
      system(cmd)
    }
  )
  settings
end


for s in getSettings()
  puts sprintf("üì¶  Now Compressing %s files ...", s.target)

  filePaths = getFilePaths(FILES_ROOT, s.target, s.ignoreDirs)
  compress(filePaths, &s.proc)
end

puts sprintf("üì¶  Now Compressing CSS files ...")

cssFiles = {
  "public/css/compiled/style.css" => [
    "public/index.html",
    "public/[a-z][a-z]/index.html",
    "public/[a-z][a-z]/*/index.html",
    "public/[a-z][a-z]/*/*/index.html",
  ]
}
purifyCss(cssFiles)

puts sprintf("üç∫  All Compression Finished!")
