#!/usr/bin/env ruby

require "compass"
require "i18n"

KRAMDOWN_SETTINGS = {
    input: "GFM",
    hard_wrap: false,
    syntax_highlighter: "rouge",
}.freeze

# https://github.com/Compass/compass/wiki/nanoc-integration
Compass.add_project_configuration("compass/config.rb")

preprocess do
    I18n.load_path += Dir.glob("i18n/*.{rb,yml}")
    I18n.available_locales = @config[:available_languages]
    I18n.default_locale = @config[:default_language]
    I18n.backend.reload!

    def generate_list_pages(kind, identifier_prefix, items_count_of_page)
        items_list = sorted_items_of(kind).
                         each_slice(items_count_of_page).to_a
        items_list.each_with_index do |_items, index|
            identifier = "#{identifier_prefix}#{index + 1}"
            @items.create("", {}, identifier)
        end
    end

    generate_list_pages("article", "/blog/", Const::DEFAULT_NUM_OF_ITEMS)
    generate_list_pages("slide", "/slides/", Const::DEFAULT_NUM_OF_ITEMS)

    @items.create("", {}, PageID::INDEX)
    @items.create("", {}, PageID::HOME)
    @items.create("", {}, PageID::BLOG)
    @items.create("", {}, PageID::SLIDES)
end

compile "/lib/**/*" do
    write @item.identifier
end

for language in @config[:available_languages] + [:default]
    compile "/**/*", rep: language do
        rule = item_rule()

        if rule.creates_localized_pages && @item_rep.name == :default
            next
        end

        I18n.locale = rule.language.code unless rule.language.nil?

        # filters
        case item[:presentation]
        when "revealjs"
            case item[:extension]
            when "asciidoc", "adoc"
                filter :asciidoctor_converter, backend: :revealjs
            when "markdown", "md"
                # Don't use filter.
                # The raw markdown text is embedded on the output HTML
            end
        when "bespoke"
            filter :asciidoctor_converter, backend: :bespoke
        else
            case item[:extension]
            when "asciidoc", "adoc"
                filter :asciidoctor
            when "erb"
                filter :erb
            when "scss"
                filter :sass, Compass.sass_engine_options
            when "slim"
                filter :slim, pretty: true
            when "markdown", "md"
                filter :kramdown, KRAMDOWN_SETTINGS
                # filter :commonmarker, [:DEFAULT]
            end
        end

        # layout
        layout(rule.layout_path) unless rule.layout_path.nil?

        # routes
        lang = @item_rep.name.to_s
        output_path = rule.output_path
        write(output_path) unless output_path.nil?
    end
end

layout "/**/*.erb", :erb
layout "/**/*.md", :kramdown, KRAMDOWN_SETTINGS
# layout '/**/*.md', :commonmarker, [:DEFAULT]
layout "/**/*.slim", :slim, pretty: true
